{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,mCACA,sBAAMC,SAVQ,SAACC,GACdA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,+BCNlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGDI,MAAOF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEnB,sBAAKgB,UAAU,OAAf,UACI,qBAAKC,IAAMjB,EAAKkB,IAAKR,IACrB,kCAAKA,SCHJS,EAAS,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAEpB,ECJuB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KA0BI,OApBAC,qBAAW,WAEX1B,EAASC,GACD0B,MAAM,SAAAC,GAEHC,YAAY,WAEPJ,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAGf,UAKZ,CAAEtB,IAGGuB,EDxBuBM,CAAc7B,GAAlCa,EAAb,EAAQN,KAAae,EAArB,EAAqBA,QAItB,OACI,qCACI,mCAAMtB,EAAN,OACEsB,GAAW,wCACb,qBAAKJ,UAAU,YAAf,SAIQL,EAAOJ,KAAM,SAACC,GAAD,OACb,cAAC,EAAD,eAEIA,GADGA,EAAIC,aEQhBmB,EAzBM,WAGhB,MAAoC5C,mBAAS,CAAC,cAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAEC,OACI,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAED,6BAEM8C,EAAWtB,KAAI,SAACT,EAAUW,GAAX,OACb,cAAC,EAAD,CAEAX,SAAYA,GADJA,Y,MCdzBgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.60f0bd47.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) =>{\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n   const handleSubmit=(e) => {\r\n         e.preventDefault();\r\n         if(inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue,...cats]);\r\n            setInputValue('');     \r\n         }\r\n        \r\n   }\r\n    return(\r\n        <>\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                value= {inputValue}\r\n                onChange={ handleInputChange}\r\n            />\r\n        </form>\r\n          \r\n        </> \r\n     )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n     setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async ( category ) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=IBytfaLdsHxof64kyJrj6vxEE38JkNTY`;\r\n    const resp= await fetch( url );\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n\r\n  }","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    console.log(id, title, url)\r\n    return (\r\n        <div className=\"card\">\r\n            <img src ={url} alt={title}/>\r\n            <p> {title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid= ({ category }) => {\r\n\r\n     const { data:images, loading } = useFetchGifs( category );\r\n     \r\n    \r\n\r\n    return(\r\n        <>\r\n            <h3> {category} </h3>\r\n            { loading && <p>loading</p> }\r\n            <div className=\"card-grid\">\r\n            \r\n            \r\n                { \r\n                    images.map ( (img ) =>(\r\n                    <GifGridItem \r\n                    key= { img.id }\r\n                    {...img}\r\n                    />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) =>{\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n        });\r\n\r\n\r\n        useEffect( () =>{\r\n\r\n        getGifs( category )\r\n               .then( imgs => {\r\n                \r\n                   setTimeout( () => {\r\n\r\n                        setState({\r\n                            data: imgs,\r\n                            loading: false\r\n                        });\r\n\r\n                   }, 3000)\r\n                  \r\n\r\n               })\r\n\r\n        },[ category ])\r\n\r\n        \r\n        return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n\r\n     const [categories, setCategories] = useState(['One Punch']);\r\n\r\n      return (\r\n          <>\r\n          <h1>GifExpertApp</h1>\r\n          <AddCategory setCategories={setCategories}/>\r\n          <hr/>\r\n         \r\n         <ul>\r\n              {\r\n               categories.map((category, id) => (\r\n                 <GifGrid \r\n                 key = { category }\r\n                 category ={ category } />\r\n               ))\r\n\r\n              }\r\n         </ul>\r\n          </>\r\n      )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n\n"],"sourceRoot":""}